{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\platini\\\\react\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Contacts, {\n      contacts: this.state.contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      this.setState({\n        contacts: data\n      });\n    }).catch(console.log);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/platini/react/my-app/src/App.js"],"names":["React","Component","Contacts","App","state","contacts","render","componentDidMount","fetch","then","res","json","data","setState","catch","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAOxBG,KAPwB,GAOhB;AACJC,MAAAA,QAAQ,EAAE;AADN,KAPgB;AAAA;;AACxBC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAMDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEO;AAAZ,OAAd;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;AAlBuB;;AAqB5B,eAAeb,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Contacts from './components/contacts';\n\nclass App extends Component {\n    render() {\n        return (\n            <Contacts contacts={this.state.contacts} />\n        )\n    }\n\n    state = {\n        contacts: []\n    };\n\n    componentDidMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ contacts: data })\n            })\n            .catch(console.log)\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}